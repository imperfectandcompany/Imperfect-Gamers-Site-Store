.modal {
	transition: transform 0.3s ease; /* Smooth transition for moving the modal */
}

.modal-content {
	padding: 24px;
	border-radius: 8px;
	max-width: 600px;
	width: 100%;
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	transform: scale(0.8);
	opacity: 0;
	transition:
		transform 0.3s ease-out,
		opacity 0.3s ease-out;
}

.modal-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.close-button {
	cursor: pointer;
	font-size: 24px;
	color: #fff;
	opacity: 0.8;
	transition:
		opacity 0.2s,
		transform 0.2s;
}

.close-button:hover {
	opacity: 1;
	transform: scale(1.1);
}

.modal-body {
	margin-top: 16px;
}

.modal-backdrop {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 80px;
	background-color: rgba(0, 0, 0, 0.75);
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 1000;
}

/* Media query for larger screens */
@media (min-width: 600px) {
	.modal-backdrop {
		bottom: 0px;
	}
}

.cookie-popup {
	width: 100%;
	padding: 20px;
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	position: fixed; /* This ensures it doesn't move with scroll and doesn't affect layout */
	bottom: 0; /* Always stays at the bottom */
	left: 0;
	background: rgba(10, 10, 10, 0.9);
	border-top: 2px solid #a83232;
	display: flex;
	justify-content: space-between;
	align-items: center;
	z-index: 50; /* Make sure this is higher than most content but below modal overlays if necessary */
	transition:
		transform 0.5s ease-in,
		opacity 0.5s ease-in;
	transform: translateY(100%); /* Start hidden below the screen */
}

@keyframes slideUp {
	from {
		transform: translateY(100%);
	}
	to {
		transform: translateY(0);
	}
}

.cookie-popup.exiting {
	animation: slideDown 0.5s ease-in forwards;
}

@keyframes slideDown {
	from {
		transform: translateY(0);
		opacity: 1;
	}
	to {
		transform: translateY(100%);
		opacity: 0;
	}
}

@keyframes slideUp {
	from {
		transform: translateY(100%);
	}
	to {
		transform: translateY(0);
	}
}

.modal-exiting {
	opacity: 0;
	transform: scale(0.8);
	transition:
		transform 0.3s ease-out,
		opacity 0.3s ease-out;
	animation: exitAnimation 0.3s forwards;
}

@keyframes exitAnimation {
	from {
		opacity: 1;
		transform: scale(1);
	}
	to {
		opacity: 0;
		transform: scale(0.8);
	}
}

@keyframes slideDown {
	from {
		transform: translateY(0);
		opacity: 1 !important;
	}
	to {
		transform: translateY(100%);
		opacity: 0 !important;
	}
}

.cookie-popup.exiting {
	animation: slideDown 0.5s ease-in forwards !important; /* Apply when exiting */
}

.button-group button {
	margin-right: 10px;
	background: transparent;
	border: none;
	cursor: pointer;
	transition: color 0.3s;
}

.button-group button:hover {
	color: #ffffff;
}

.hidden-accept-all {
	opacity: 0;
	height: 0 !important; /* Override any specific height to make it disappear */
}

/* CookieConsent.css */
.accept-button {
	transition:
		opacity 0.3s ease,
		height 0.3s ease,
		padding 0.3s ease;
	height: auto; /* Ensure the height is auto to accommodate content */
	opacity: 1;
	padding: 10px; /* Adjust padding as needed */
	overflow: hidden;
}

.hidden-accept-all {
	opacity: 0;
	height: 0 !important; /* Collapse the container */
	padding: 0 !important; /* Remove padding during transition */
}

@media (max-width: 768px) {
	.cookie-popup {
		flex-direction: column;
		justify-content: center;
		align-items: flex-start;
	}

	.button-group {
		order: 1;
		width: 100%;
	}

	.accept-button {
		order: 2;
		width: 100%;
		display: flex;
		justify-content: flex-end;
		margin-top: 20px;
	}
}

.settings-panel {
	display: flex;
	flex-direction: column;
	gap: 10px;
	background: rgba(255, 255, 255, 0.1);
	padding: 10px;
	border-radius: 8px;
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.settings-option {
	display: flex;
	align-items: center;
	background: rgba(255, 255, 255, 0.05);
	padding: 8px;
	border-radius: 4px;
	transition: background-color 0.3s;
}

.settings-option:hover {
	background: rgba(255, 255, 255, 0.1);
}

.settings-option label {
	flex: 1;
	font-size: 14px;
}

.toggle-switch {
	position: relative;
	display: inline-block;
	width: 34px;
	height: 20px;
}

.toggle-switch input {
	opacity: 0;
	width: 0;
	height: 0;
}

.toggle-switch input[type='checkbox'] {
	position: absolute;
	opacity: 0;
	width: 100%;
	height: 100%;
	margin: 0;
	cursor: pointer;
	z-index: 1;
}

.slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: #ccc;
	border-radius: 34px;
	pointer-events: none;
	z-index: 0;
	transition:
		background-color 0.3s ease,
		transform 0.3s ease;
}

.slider:before {
	position: absolute;
	content: '';
	height: 12px;
	width: 12px;
	left: 4px;
	bottom: 4px;
	background-color: white;
	transition: transform 0.3s ease;
	border-radius: 50%;
}

input:checked + .slider {
	background-color: #7f1d1d;
}

input:checked + .slider:before {
	transform: translateX(14px);
}

/* General styles for disabled settings options */
.settings-option.disabled {
	cursor: not-allowed; /* Change cursor to indicate non-interactivity */
	opacity: 0.5; /* Make the option look faded to indicate it is disabled */
}

/* Specific styles for disabled toggle switches */
.toggle-switch input:disabled + .slider {
	background-color: #aaa; /* Grey out the slider background */
}

.toggle-switch input:disabled + .slider:before {
	background-color: #777; /* Darken the slider button */
}

/* Additional styles to prevent interaction on disabled toggles */
.toggle-switch input:disabled {
	cursor: not-allowed; /* Ensure the cursor indicates the input is disabled */
}

/* Adjust label opacity for disabled state for clearer UI indication */
.settings-option.disabled label {
	color: #ccc; /* Lighten label color to indicate disabled state */
	cursor: not-allowed; /* Ensure the cursor indicates the input is disabled */
}

/* Styles for the read-only (essential) toggle switches */
.toggle-switch.read-only input + .slider {
	background-color: #d32f2f; /* Primary red for read-only active state */
}

.toggle-switch.read-only input:checked + .slider:before {
	background-color: white; /* White circle to indicate it's on but not changeable */
	transform: translateX(14px); /* Ensure it's positioned to show as enabled */
}

/* Optional: Make the label for essential cookies more prominent */
.settings-option.essential label {
	font-weight: bold; /* Make label text bold */
}

@keyframes glow {
	from {
		box-shadow: 0 0 5px #ff0000;
	}
	to {
		box-shadow: 0 0 20px #ff0000;
	}
}

.sub-settings {
	margin-left: 20px;
	display: none;
}

.sub-settings.active {
	display: block;
}
